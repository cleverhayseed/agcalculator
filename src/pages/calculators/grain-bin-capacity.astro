---
import Layout from "../../layouts/Layout.astro";

const GRAINS = [
  { key: "corn",   name: "Corn",                  tw: 56 },
  { key: "wheat",  name: "Wheat",                 tw: 60 },
  { key: "soy",    name: "Soybeans",              tw: 60 },
  { key: "oats",   name: "Oats",                  tw: 32 },
  { key: "barley", name: "Barley",                tw: 48 },
  { key: "sorghum",name: "Grain Sorghum / Milo",  tw: 56 },
  { key: "canola", name: "Canola",                tw: 50 },
  { key: "other",  name: "Other (set test weight)", tw: 56 },
];
---

<Layout>
  <Fragment slot="head">
    <title>Grain Bin Capacity Calculator (Bushels &amp; Weight) | AgCalculator</title>
    <meta name="description" content="Calculate grain bin capacity in bushels and estimate grain weight fast. Supports common bin sizes and dimensions." />
    <link rel="canonical" href="https://agcalculator.com/calculators/grain-bin-capacity/" />

    <!-- Social -->
    <meta property="og:site_name" content="AgCalculator" />
    <meta property="og:title" content="Grain Bin Capacity Calculator (Bushels &amp; Weight)" />
    <meta property="og:description" content="Calculate grain bin capacity in bushels and estimate grain weight fast." />
    <meta property="og:url" content="https://agcalculator.com/calculators/grain-bin-capacity/" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="og:image" content="https://agcalculator.com/og-grain-bin.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta name="twitter:image" content="https://agcalculator.com/og-grain-bin.png" />

    <!-- Structured data -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "WebApplication",
        "name": "Grain Bin Capacity Calculator",
        "applicationCategory": "Calculator",
        "operatingSystem": "Web",
        "url": "https://agcalculator.com/calculators/grain-bin-capacity/",
        "description": "Calculate grain bin capacity in bushels and estimate grain weight fast.",
        "publisher": { "@type": "Organization", "name": "AgCalculator", "url": "https://agcalculator.com" },
        "offers": { "@type": "Offer", "price": "0", "priceCurrency": "USD" }
      }
    </script>
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
          { "@type": "ListItem", "position": 1, "name": "Home", "item": "https://agcalculator.com/" },
          { "@type": "ListItem", "position": 2, "name": "Grain Bin Capacity Calculator", "item": "https://agcalculator.com/calculators/grain-bin-capacity/" }
        ]
      }
    </script>
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "FAQPage",
        "mainEntity": [
          {
            "@type": "Question",
            "name": "What if my roof is flat?",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "Leave roof height at 0 so only the cylindrical volume is used."
            }
          },
          {
            "@type": "Question",
            "name": "Can I use metric?",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "Convert metric to feet before entering values (1 m = 3.28084 ft). A metric toggle is planned."
            }
          },
          {
            "@type": "Question",
            "name": "Why don’t my numbers match label capacity?",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "Manufacturer ratings can include safety factors or different fill levels. This calculator uses geometric volume with your inputs."
            }
          }
        ]
      }
    </script>
  </Fragment>

  <header>
    <div class="wrap"><a href="/">← AgCalculator</a></div>
  </header>

  <main class="wrap">
    <h1 style="margin:.5rem 0 1rem">Grain Bin Capacity (Bushels &amp; Weight)</h1>

    <fieldset>
      <legend>Inputs (imperial)</legend>

      <div class="row">
        <div>
          <label for="grain">Grain</label>
          <select id="grain">
            {GRAINS.map((g) => <option value={g.key} data-tw={g.tw}>{g.name}</option>)}
          </select>
        </div>
        <div>
          <label for="tw">Test weight (lb/bu)</label>
          <input id="tw" type="number" step="0.1" value="56" />
        </div>
        <div>
          <label for="shrink">Moisture shrink (%)</label>
          <input id="shrink" type="number" step="0.1" value="0" />
        </div>
      </div>

      <div class="row">
        <div>
          <label for="diam">Bin diameter (ft)</label>
          <input id="diam" type="number" step="0.01" placeholder="e.g. 36" />
        </div>
        <div>
          <label for="wall">Straight-wall height (ft)</label>
          <input id="wall" type="number" step="0.01" placeholder="e.g. 24" />
        </div>
        <div>
          <label for="roofType">Roof type</label>
          <select id="roofType">
            <option value="flat">Flat</option>
            <option value="cone">Conical</option>
          </select>
        </div>
      </div>

      <div class="row">
        <div>
          <label for="roofH">Conical roof height (ft)</label>
          <input id="roofH" type="number" step="0.01" placeholder="0" />
        </div>
        <div>
          <label for="hopH">Hopper height (optional, ft)</label>
          <input id="hopH" type="number" step="0.01" placeholder="0" />
        </div>
        <div>
          <label for="have">Reverse: if I have this many bushels…</label>
          <input id="have" type="number" step="1" placeholder="e.g. 12000" />
        </div>
      </div>

      <p class="note">Tip: Leave roof/hopper at 0 if you have a flat roof or no hopper.</p>
    </fieldset>

    <section class="result" id="out">
      <div class="note">Results</div>
      <div style="display:grid;gap:.5rem;margin-top:.4rem">
        <div><strong>Bushels:</strong> <span id="bushels">—</span></div>
        <div><strong>Weight:</strong> <span id="lbs">—</span> lb (<span id="tons">—</span> tons)</div>
        <div><strong>Volume:</strong> <span id="cft">—</span> ft³</div>
        <div style="margin-top:.5rem">
          <div class="note">Fill estimate (from reverse input)</div>
          <div style="font-variant-numeric:tabular-nums;font-size:1.2rem"><span id="fillPct">—</span></div>
          <div class="gauge"><div id="bar" class="bar"></div></div>
        </div>
      </div>
      <p class="note" style="margin-top:.6rem">Estimates only. Verify before purchasing materials or operating equipment.</p>
    </section>

    <!-- Step-by-step explainer -->
    <section class="content" id="explain">
      <h2>How we got these numbers (with your inputs)</h2>
      <div id="steps" class="note">Enter bin size to see the math step-by-step.</div>
      <h3 style="margin-top:.8rem">Tips</h3>
      <ul id="tips" style="margin:.2rem 0 0 1.1rem"></ul>
    </section>

    <!-- Publisher content: how it works + example + mini FAQ -->
    <section class="content">
      <h2>How this calculator works</h2>
      <p>This tool estimates the grain volume in a cylindrical bin and converts that volume to bushels and weight.</p>
      <h3>Formulas</h3>
      <ul>
        <li><strong>Cylinder volume (ft³)</strong> = π × (D/2)² × H</li>
        <li><strong>Conical roof / hopper (ft³)</strong> = π × (D/2)² × height ÷ 3</li>
        <li><strong>Bushels</strong> = total ft³ ÷ <code>1.2445</code> (ft³ per U.S. bushel)</li>
        <li><strong>Weight (lb)</strong> = bushels × test weight (lb/bu)</li>
        <li><strong>Tons</strong> = pounds ÷ 2000</li>
      </ul>

      <h3>Assumptions & notes</h3>
      <ul>
        <li>Bin is approximated as a perfect cylinder plus optional cone sections.</li>
        <li><em>Moisture shrink</em> reduces bushels by the chosen percent.</li>
        <li>Test weight defaults come from common industry values; always use your measured weight when available.</li>
      </ul>

      <h3>Example</h3>
      <p>36&nbsp;ft diameter, 24&nbsp;ft straight wall, conical roof 4&nbsp;ft, corn at 56&nbsp;lb/bu, no shrink:</p>
      <ol>
        <li>Cylinder: π×18²×24 ≈ <strong>24,429 ft³</strong></li>
        <li>Roof cone: π×18²×4 ÷ 3 ≈ <strong>1,357 ft³</strong></li>
        <li>Total ft³ ≈ <strong>25,786 ft³</strong></li>
        <li>Bushels: 25,786 ÷ 1.2445 ≈ <strong>20,713 bu</strong></li>
        <li>Weight: 20,713 × 56 ≈ <strong>1,160,000 lb</strong> (~<strong>580 tons</strong>)</li>
      </ol>

      <h3>FAQ</h3>
      <p><strong>What if my roof is flat?</strong> Leave roof height at 0.</p>
      <p><strong>Can I use metric?</strong> Enter metric values converted to feet (1&nbsp;m = 3.28084&nbsp;ft). A metric toggle is planned.</p>
      <p><strong>Why don’t my numbers match label capacity?</strong> Manufacturer ratings can include safety factors or different fill levels; this tool uses pure geometry.</p>

      <p class="disclaimer">Estimates only. Verify before purchasing materials or operating equipment.</p>
    </section>
  </main>

  <style>
    :root{--green:#2F855A;--slate:#334155;--muted:#64748b;--bg:#F8FAFC}
    *{box-sizing:border-box}
    a{color:var(--green);text-decoration:none}
    header{padding:1rem;border-bottom:1px solid #e5e7eb;background:white}
    .wrap{max-width:960px;margin:0 auto;padding:1rem}
    fieldset{background:white;border:1px solid #e5e7eb;border-radius:12px;margin:0 0 1rem;padding:1rem}
    legend{padding:0 .4rem;color:var(--muted)}
    label{display:block;margin:.4rem 0 .2rem;font-size:.92rem}
    input,select{width:100%;padding:.6rem;border:1px solid #cbd5e1;border-radius:10px}
    .row{display:grid;gap:.8rem}
    @media(min-width:800px){.row{grid-template-columns:repeat(3,1fr)}}
    .result{background:white;border:1px solid #e5e7eb;border-radius:12px;padding:1rem}
    .note{color:var(--muted);font-size:.9rem}
    .gauge{height:10px;background:#e5e7eb;border-radius:999px;overflow:hidden}
    .bar{height:100%;background:var(--green);width:0%}

    /* content blocks (explainer + publisher content) */
    .content{background:white;border:1px solid #e5e7eb;border-radius:12px;padding:1rem;margin-top:1rem}
    .content h2{margin:.2rem 0 .6rem}
    .content h3{margin:.8rem 0 .3rem}
    .content ul, .content ol{margin:.2rem 0 .2rem .9rem}
    .content .disclaimer{color:#64748b;margin-top:.6rem}
  </style>

  <!-- Single module: calculator + explainer -->
  <script type="module">
    import { $, num, fmt, onInputs } from "../../lib/utils.js";

    const fields = ["grain","tw","shrink","diam","wall","roofType","roofH","hopH","have"];
    onInputs(fields, () => { compute(); explain(); });

    $("grain").addEventListener("change", (e) => {
      const opt = e.target.selectedOptions[0];
      $("tw").value = opt.dataset.tw || "56";
      compute(); explain();
    });

    function compute(){
      const d = num("diam"), wall = num("wall"), roofH = num("roofH") || 0, hopH = num("hopH") || 0;
      if(!(d>0 && wall>=0)) { return show(NaN,NaN,NaN,NaN); }

      const r = d/2;
      const cyl = Math.PI * r * r * wall;                   // ft³
      const roof = $("roofType").value === "cone" && roofH>0 ? (Math.PI * r * r * roofH / 3) : 0;
      const hopper = hopH>0 ? (Math.PI * r * r * hopH / 3) : 0;
      const ft3 = cyl + roof + hopper;

      let bu = ft3 / 1.2445;                                // ft³ → bushels
      const shrink = parseFloat($("shrink").value || "0");
      if(shrink>0) bu *= (1 - shrink/100);

      const tw = num("tw") || 56;
      const pounds = bu * tw;
      const tons = pounds / 2000;

      const have = num("have");
      const pct = (have>0 && bu>0) ? Math.min(100, (have/bu)*100) : NaN;

      show(bu, pounds, ft3, tons, pct);
    }

    function show(bu, lbs, ft3, tons, pct){
      $("bushels").textContent = fmt(bu,0);
      $("lbs").textContent = fmt(lbs,0);
      $("tons").textContent = fmt(tons,1);
      $("cft").textContent = fmt(ft3,0);
      $("fillPct").textContent = Number.isFinite(pct) ? fmt(pct,1) + "%" : "—";
      $("bar").style.width = Number.isFinite(pct) ? Math.max(0, Math.min(100, pct)) + "%" : "0%";
    }

    function explain(){
      const d = num("diam"), wall = num("wall");
      const steps = $("steps"), tipsEl = $("tips");

      if(!(d>0 && wall>=0)) { steps.textContent = "Enter diameter and straight-wall height."; tipsEl.innerHTML=""; return; }

      const r = d/2;
      const roofConical = $("roofType").value === "cone";
      const roofH = num("roofH") || 0;
      const hopH  = num("hopH")  || 0;

      const cyl  = Math.PI * r * r * wall;
      const roof = roofConical && roofH>0 ? (Math.PI * r * r * roofH / 3) : 0;
      const hop  = hopH>0 ? (Math.PI * r * r * hopH / 3) : 0;
      const ft3  = cyl + roof + hop;

      const shrink = parseFloat($("shrink").value || "0");
      const buRaw  = ft3 / 1.2445;
      const bu     = shrink>0 ? buRaw * (1 - shrink/100) : buRaw;
      const tw     = num("tw") || 56;
      const lbs    = bu * tw;
      const tons   = lbs / 2000;

      const lines = [];
      lines.push(`<strong>Cylinder</strong> = π × (${r.toFixed(2)})² × ${fmt(wall,2)} = ${fmt(cyl,0)} ft³`);
      if (roof>0) lines.push(`<strong>Conical roof</strong> = π × (${r.toFixed(2)})² × ${fmt(roofH,2)} ÷ 3 = ${fmt(roof,0)} ft³`);
      if (hop>0)  lines.push(`<strong>Hopper</strong> = π × (${r.toFixed(2)})² × ${fmt(hopH,2)} ÷ 3 = ${fmt(hop,0)} ft³`);
      lines.push(`<strong>Total volume</strong> = ${fmt(ft3,0)} ft³`);
      lines.push(`<strong>Bushels</strong> = ft³ ÷ 1.2445 = ${fmt(buRaw,0)} bu${shrink>0 ? ` → shrink ${shrink}% = <strong>${fmt(bu,0)} bu</strong>` : ""}`);
      lines.push(`<strong>Weight</strong> = bushels × test weight (${fmt(tw,0)} lb/bu) = <strong>${fmt(lbs,0)} lb</strong> (${fmt(tons,1)} tons)`);

      steps.innerHTML = `<div style="display:grid;gap:.35rem">${lines.map(x=>`<div>${x}</div>`).join("")}</div>`;

      const tips = [];
      tips.push(`Test weight defaults to the selected grain; your measured test weight will give the best estimate.`);
      if (shrink>0) tips.push(`Shrink applied: −${shrink}%. Set to 0% if you don’t want moisture adjustment.`);
      if (roof===0 && roofConical) tips.push(`Roof type is “Conical” but height is 0; enter a height or switch to Flat.`);
      if (hop>0) tips.push(`Hopper adds ${fmt(hop,0)} ft³ to total volume.`);
      const have = num("have");
      if (have>0 && bu>0){
        const pct = Math.min(100, (have/bu)*100);
        tips.push(`Reverse check: ${fmt(have,0)} bu would fill ~${fmt(pct,1)}% of this bin.`);
      }
      tipsEl.innerHTML = tips.map(t=>`<li>${t}</li>`).join("");
    }

    // initial render
    compute();
    explain();
  </script>
</Layout>
