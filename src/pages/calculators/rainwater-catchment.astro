---
import Layout from "../../layouts/Layout.astro";
---

<Layout>
  <Fragment slot="head">
    <title>Rainwater Catchment & Tank Sizing Calculator | AgCalculator</title>
    <meta name="description" content="Estimate harvestable rainwater from a roof and size a storage tank for days of supply. Works in US/metric, supports rectangle area, and first-flush losses." />
    <link rel="canonical" href="https://agcalculator.com/calculators/rainwater-catchment/" />

    <!-- Open Graph -->
    <meta property="og:site_name" content="AgCalculator" />
    <meta property="og:title" content="Rainwater Catchment & Tank Sizing Calculator" />
    <meta property="og:description" content="Estimate gallons or liters captured and recommended tank size from roof area, rainfall, runoff coefficient, and daily demand." />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://agcalculator.com/calculators/rainwater-catchment/" />
    <meta property="og:image" content="https://agcalculator.com/og-hay-bale.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />

    <!-- Structured data -->
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"WebApplication",
      "name":"Rainwater Catchment & Tank Sizing Calculator",
      "applicationCategory":"Calculator",
      "operatingSystem":"Web",
      "url":"https://agcalculator.com/calculators/rainwater-catchment/",
      "description":"Estimate harvestable rainwater from a roof and size a storage tank for days of supply.",
      "publisher":{"@type":"Organization","name":"AgCalculator","url":"https://agcalculator.com"},
      "offers":{"@type":"Offer","price":"0","priceCurrency":"USD"}
    }
    </script>
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"BreadcrumbList",
      "itemListElement":[
        {"@type":"ListItem","position":1,"name":"Home","item":"https://agcalculator.com/"},
        {"@type":"ListItem","position":2,"name":"Rainwater Catchment & Tank Sizing","item":"https://agcalculator.com/calculators/rainwater-catchment/"}
      ]
    }
    </script>
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"FAQPage",
      "mainEntity":[
        {
          "@type":"Question",
          "name":"What runoff coefficient should I use?",
          "acceptedAnswer":{"@type":"Answer","text":"Metal or sealed roofs often use 0.9; asphalt shingle around 0.8; concrete ~0.85–0.9; gravel/dirt 0.5–0.7. Start conservative; first-flush diverters and debris reduce yield."}
        },
        {
          "@type":"Question",
          "name":"Is rainfall 'per storm' or 'per month'?",
          "acceptedAnswer":{"@type":"Answer","text":"Enter rain depth for the period you care about (single event, month, or year). The calculator converts depth over the roof area to gallons or liters, then applies the runoff coefficient and optional first-flush."}
        },
        {
          "@type":"Question",
          "name":"How big should my tank be?",
          "acceptedAnswer":{"@type":"Answer","text":"Rule of thumb: tank size = daily demand × desired days of supply. Compare with typical harvest from a design storm or season so you don’t oversize storage."}
        }
      ]
    }
    </script>

    <!-- AdSense: your publisher ID -->
    <meta name="google-adsense-account" content="ca-pub-4050846968323757" />
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4050846968323757" crossorigin="anonymous"></script>

    <style>
      :root{--green:#2F855A;--slate:#334155;--muted:#64748b;--bg:#F8FAFC}
      *{box-sizing:border-box}
      header{padding:1rem;border-bottom:1px solid #e5e7eb;background:white}
      .wrap{max-width:960px;margin:0 auto;padding:1rem}
      a{color:var(--green);text-decoration:none}
      fieldset{background:white;border:1px solid #e5e7eb;border-radius:12px;margin:0 0 1rem;padding:1rem}
      legend{padding:0 .4rem;color:var(--muted)}
      label{display:block;margin:.4rem 0 .2rem;font-size:.92rem}
      input,select{width:100%;padding:.6rem;border:1px solid #cbd5e1;border-radius:10px}
      .row{display:grid;gap:.8rem}
      @media(min-width:800px){.row{grid-template-columns:repeat(3,1fr)}}
      .result{background:white;border:1px solid #e5e7eb;border-radius:12px;padding:1rem}
      .note{color:var(--muted);font-size:.9rem}
      .content{background:white;border:1px solid #e5e7eb;border-radius:12px;padding:1rem;margin-top:1rem}
      .content h2{margin:.2rem 0 .6rem}
      .content h3{margin:.8rem 0 .3rem}
      .content ul,.content ol{margin:.2rem 0 .2rem 1rem}
      .content .disclaimer{color:#64748b;margin-top:.6rem}
      .ads{margin:.75rem 0}
      .adwrap{display:block;min-height:90px}

      /* Units pill (matches other calculators) */
      .unitsBar{display:flex;gap:12px;align-items:center;margin:.5rem 0 1rem}
      .unitsBar .label{font-weight:600;color:#0f172a;font-size:1.05rem}
      .seg{background:#eef2f7;border-radius:9999px;padding:4px;display:inline-flex;gap:6px}
      .seg button{border:1px solid transparent;background:transparent;border-radius:9999px;padding:.35rem .8rem;font-weight:600;color:var(--slate);cursor:pointer}
      .seg button.on{background:var(--green);color:white;border-color:var(--green)}
      .saved{color:#64748b}
    </style>
  </Fragment>

  <header><div class="wrap"><a href="/">← AgCalculator</a></div></header>

  <main class="wrap">
    <h1 style="margin:.5rem 0 .25rem">Rainwater Catchment &amp; Tank Sizing</h1>

    <!-- Units bar -->
    <div class="unitsBar">
      <span class="label">Units:</span>
      <div class="seg" role="tablist" aria-label="Units">
        <button id="uUS" type="button" role="tab" aria-selected="true">US</button>
        <button id="uMET" type="button" role="tab" aria-selected="false">Metric</button>
      </div>
      <span class="saved">Saved on this device</span>
    </div>

    <!-- Ad slot #1 (responsive; add your slot IDs later) -->
    <div class="ads">
      <ins class="adsbygoogle adwrap"
           style="display:block"
           data-ad-client="ca-pub-4050846968323757"
           data-ad-slot="0000000001"
           data-ad-format="auto"
           data-full-width-responsive="true"></ins>
      <script is:inline>(window.adsbygoogle=window.adsbygoogle||[]).push({});</script>
    </div>

    <fieldset>
      <legend>Area</legend>
      <div class="row">
        <div>
          <label for="areaMode">Area input</label>
          <select id="areaMode">
            <option value="total">Total roof area</option>
            <option value="rect">Rectangle (L × W)</option>
          </select>
        </div>
        <div id="rowAreaTotal">
          <label id="labelArea" for="area">Roof area (ft²)</label>
          <input id="area" type="number" step="0.01" placeholder="e.g. 1800" />
        </div>
        <div id="rowAreaRect" style="display:none">
          <div style="display:flex;gap:.5rem">
            <div style="flex:1">
              <label id="labelLen" for="len">Roof length (ft)</label>
              <input id="len" type="number" step="0.01" placeholder="e.g. 60" />
            </div>
            <div style="flex:1">
              <label id="labelWid" for="wid">Roof width (ft)</label>
              <input id="wid" type="number" step="0.01" placeholder="e.g. 30" />
            </div>
          </div>
          <div class="note">Area = L × W</div>
        </div>
      </div>
    </fieldset>

    <fieldset>
      <legend>Rainfall, runoff &amp; demand</legend>
      <div class="row">
        <div>
          <label id="labelRain" for="rain">Rainfall for period (in)</label>
          <input id="rain" type="number" step="0.01" placeholder="e.g. 1.2" />
        </div>
        <div>
          <label for="coeff">Runoff coefficient</label>
          <select id="coeff">
            <option value="0.90">Metal / sealed (0.90)</option>
            <option value="0.85">Concrete (0.85)</option>
            <option value="0.80">Asphalt shingle (0.80)</option>
            <option value="0.70">Gravel/dirt (0.70)</option>
          </select>
        </div>
        <div>
          <label id="labelFlush" for="flush">First-flush loss (optional, gal)</label>
          <input id="flush" type="number" step="0.01" placeholder="e.g. 20" />
          <div class="note" id="noteFlush">Subtracts once from harvest (gal)</div>
        </div>
      </div>

      <div class="row">
        <div>
          <label id="labelDemand" for="demand">Daily demand (gal/day)</label>
          <input id="demand" type="number" step="0.01" placeholder="e.g. 200" />
        </div>
        <div>
          <label for="days">Desired days of supply</label>
          <input id="days" type="number" step="1" placeholder="e.g. 7" />
        </div>
        <div>
          <label id="labelTank" for="tank">Existing tank (gal, optional)</label>
          <input id="tank" type="number" step="1" placeholder="e.g. 2500" />
        </div>
      </div>

      <p class="note">Enter rainfall for the time window you care about (storm, month, or season). We’ll compute harvest for that period.</p>
    </fieldset>

    <section class="result">
      <div class="note">Results</div>
      <div style="display:grid;gap:.5rem;margin-top:.4rem">
        <div><strong>Harvestable water (this period):</strong> <span id="harv">—</span></div>
        <div><strong>Suggested tank size:</strong> <span id="tankSuggest">—</span></div>
        <div><strong>Days of supply from harvest:</strong> <span id="daysFromHarv">—</span></div>
        <div><strong>Days of supply from existing tank:</strong> <span id="daysFromTank">—</span></div>
      </div>
      <p class="note" style="margin-top:.6rem">Estimates only. First-flush, debris, and losses reduce real capture—use conservative numbers.</p>
    </section>

    <!-- Ad slot #2 (mid-page, responsive) -->
    <div class="ads">
      <ins class="adsbygoogle adwrap"
           style="display:block"
           data-ad-client="ca-pub-4050846968323757"
           data-ad-slot="0000000002"
           data-ad-format="auto"
           data-full-width-responsive="true"></ins>
      <script is:inline>(window.adsbygoogle=window.adsbygoogle||[]).push({});</script>
    </div>

    <section class="content" id="explain">
      <h2>How we got these numbers</h2>
      <div id="steps" class="note">Enter roof, rainfall, and demand to see the step-by-step.</div>

      <h3>Formulas</h3>
      <ul>
        <li><strong>Gross volume</strong> (US) = area(ft²) × rain(in) × 0.623</li>
        <li><strong>Gross volume</strong> (metric) = area(m²) × rain(mm) <em>(liters)</em></li>
        <li><strong>Harvestable</strong> = gross × runoff coefficient − first-flush (≥ 0)</li>
        <li><strong>Suggested tank</strong> = daily demand × desired days</li>
        <li><strong>Days from harvest</strong> = harvestable ÷ daily demand</li>
        <li><strong>Days from existing tank</strong> = tank ÷ daily demand</li>
      </ul>

      <h3>Example</h3>
      <p>1,800 ft² metal roof, 1.2 in rain, coeff 0.9; demand 200 gal/day, 7 days target, 2,500 gal tank:</p>
      <ol>
        <li>Gross = 1,800 × 1.2 × 0.623 ≈ <strong>1,346 gal</strong></li>
        <li>Harvestable ≈ 1,346 × 0.9 = <strong>1,211 gal</strong></li>
        <li>Tank suggestion = 200 × 7 = <strong>1,400 gal</strong></li>
        <li>Days from harvest ≈ 1,211 ÷ 200 = <strong>6.1 days</strong></li>
        <li>Days from existing tank = 2,500 ÷ 200 = <strong>12.5 days</strong></li>
      </ol>

      <p class="disclaimer">Estimates only. Verify with local code and water quality guidance for potable uses.</p>
    </section>

    <script is:inline>
      // Helpers
      const $ = (id) => document.getElementById(id);
      const num = (id) => parseFloat(($(id)?.value ?? "").trim());
      const fmt0 = (n) => Number.isFinite(n) ? n.toLocaleString(undefined,{maximumFractionDigits:0}) : "—";
      const fmt1 = (n) => Number.isFinite(n) ? n.toLocaleString(undefined,{maximumFractionDigits:1}) : "—";

      // Constants
      const FT2_PER_M2 = 10.7639;
      const IN_PER_MM = 1/25.4;
      const GAL_PER_L  = 0.264172;
      const L_PER_GAL  = 3.78541;
      const GAL_PER_IN_FT2 = 0.623;

      // Unit state (persist like other tools)
      const UNIT_KEY = "ac.units.rainwater"; // "imp" | "met"
      let sys = (localStorage.getItem(UNIT_KEY) || "imp");

      // Wire controls
      ["areaMode","coeff"].forEach(id => $(id).addEventListener("change", onMode));
      ["area","len","wid","rain","flush","demand","days","tank"].forEach(id => $(id).addEventListener("input", compute));
      $("#uUS").addEventListener("click", () => setUnits("imp"));
      $("#uMET").addEventListener("click", () => setUnits("met"));

      // Init UI
      setUnits(sys);
      onMode(); compute();

      function setUnits(next){
        sys = next;
        localStorage.setItem(UNIT_KEY, sys);
        // toggle appearance
        $("#uUS").classList.toggle("on", sys==="imp");
        $("#uMET").classList.toggle("on", sys==="met");
        $("#uUS").setAttribute("aria-selected", sys==="imp");
        $("#uMET").setAttribute("aria-selected", sys==="met");

        // relabel fields
        $("#labelArea").textContent   = sys==="imp" ? "Roof area (ft²)" : "Roof area (m²)";
        $("#labelLen").textContent    = sys==="imp" ? "Roof length (ft)" : "Roof length (m)";
        $("#labelWid").textContent    = sys==="imp" ? "Roof width (ft)"  : "Roof width (m)";
        $("#labelRain").textContent   = sys==="imp" ? "Rainfall for period (in)" : "Rainfall for period (mm)";
        $("#labelDemand").textContent = sys==="imp" ? "Daily demand (gal/day)" : "Daily demand (L/day)";
        $("#labelTank").textContent   = sys==="imp" ? "Existing tank (gal, optional)" : "Existing tank (L, optional)";
        $("#labelFlush").textContent  = sys==="imp" ? "First-flush loss (optional, gal)" : "First-flush loss (optional, L)";
        $("#noteFlush").textContent   = sys==="imp" ? "Subtracts once from harvest (gal)" : "Subtracts once from harvest (L)";

        compute();
      }

      function onMode(){
        const m = $("#areaMode").value;
        $("#rowAreaTotal").style.display = m==="total" ? "" : "none";
        $("#rowAreaRect").style.display  = m==="rect"  ? "" : "none";
        compute();
      }

      // -- conversions to base (ft², inches, gallons) -------------------------
      function areaFt2(){
        const m = $("#areaMode").value;
        if (m==="total"){
          const v = num("area");
          if (!(v>0)) return NaN;
          return (sys==="imp") ? v : v * FT2_PER_M2;
        } else {
          let L = num("len"), W = num("wid");
          if (!(L>0 && W>0)) return NaN;
          if (sys==="imp") return L*W;
          // m → ft then multiply
          return (L * Math.sqrt(FT2_PER_M2)) * (W * Math.sqrt(FT2_PER_M2));
        }
      }
      const rainIn = () => {
        const r = num("rain"); if (!(r>=0)) return NaN;
        return (sys==="imp") ? r : r * IN_PER_MM;
      };
      const demandGPD = () => {
        const d = num("demand"); if (!(d>0)) return NaN;
        return (sys==="imp") ? d : d * GAL_PER_L;
      };
      const tankGal = () => {
        const t = num("tank"); if (!(t>0)) return 0;
        return (sys==="imp") ? t : t * GAL_PER_L;
      };
      const flushGal = () => {
        const f = num("flush"); if (!(f>0)) return 0;
        return (sys==="imp") ? f : f * GAL_PER_L;
      };

      // -- main compute -------------------------------------------------------
      function compute(){
        const Aft2 = areaFt2();
        const Rin  = rainIn();
        const k    = parseFloat($("#coeff").value);
        const dGPD = demandGPD();
        const days = num("days");
        const tankG = tankGal();
        const flushG = flushGal();

        if (!(Aft2>0) || !(Rin>=0) || !(k>0)){
          show(); $("#steps").innerHTML = `<span class="note">Enter roof, rainfall, and demand to see the step-by-step.</span>`;
          return;
        }

        const grossGal = Aft2 * Rin * GAL_PER_IN_FT2;
        const harvGal  = Math.max(0, grossGal * k - flushG);

        const tankSuggestGal = (dGPD>0 && days>0) ? (dGPD * days) : NaN;
        const daysFromHarv   = (dGPD>0) ? (harvGal / dGPD) : NaN;
        const daysFromTank   = (dGPD>0 && tankG>0) ? (tankG / dGPD) : NaN;

        // Show in chosen units
        if (sys==="imp"){
          $("#harv").textContent        = fmt0(harvGal) + " gal";
          $("#tankSuggest").textContent = Number.isFinite(tankSuggestGal) ? fmt0(tankSuggestGal) + " gal" : "—";
        } else {
          $("#harv").textContent        = fmt0(harvGal * L_PER_GAL) + " L";
          $("#tankSuggest").textContent = Number.isFinite(tankSuggestGal) ? fmt0(tankSuggestGal * L_PER_GAL) + " L" : "—";
        }
        $("#daysFromHarv").textContent = Number.isFinite(daysFromHarv) ? fmt1(daysFromHarv) + " days" : "—";
        $("#daysFromTank").textContent = Number.isFinite(daysFromTank) ? fmt1(daysFromTank) + " days" : "—";

        // Steps
        const Ashow  = sys==="imp" ? Aft2 : (Aft2/FT2_PER_M2);
        const Rshow  = sys==="imp" ? Rin : (Rin/IN_PER_MM);
        const grossS = sys==="imp" ? grossGal : grossGal*L_PER_GAL;
        const flushS = sys==="imp" ? flushG   : flushG*L_PER_GAL;
        const harvS  = sys==="imp" ? harvGal  : harvGal*L_PER_GAL;
        const uA = sys==="imp" ? "ft²" : "m²";
        const uR = sys==="imp" ? "in"  : "mm";
        const uV = sys==="imp" ? "gal" : "L";

        const lines = [];
        if (sys==="imp"){
          lines.push(`<div>Gross = area × rain × 0.623 = ${fmt0(Ashow)} ${uA} × ${fmt1(Rshow)} ${uR} × 0.623 = <strong>${fmt0(grossS)}</strong> ${uV}</div>`);
        } else {
          lines.push(`<div>Gross = area × rain (metric shortcut) = ${fmt0(Ashow)} ${uA} × ${fmt1(Rshow)} ${uR} = <strong>${fmt0(grossS)}</strong> ${uV}</div>`);
        }
        lines.push(`<div>Harvestable = gross × coeff − first-flush = ${fmt0(grossS)} × ${k} − ${fmt0(flushS)} = <strong>${fmt0(harvS)}</strong> ${uV}</div>`);
        if (Number.isFinite(tankSuggestGal)){
          const tsShow = sys==="imp" ? tankSuggestGal : tankSuggestGal*L_PER_GAL;
          const dShow  = sys==="imp" ? dGPD : dGPD*L_PER_GAL;
          lines.push(`<div>Tank suggestion = daily × days = ${fmt0(dShow)} ${uV}/day × ${fmt0(days)} = <strong>${fmt0(tsShow)}</strong> ${uV}</div>`);
        }
        if (Number.isFinite(daysFromHarv)){
          const dShow  = sys==="imp" ? dGPD : dGPD*L_PER_GAL;
          lines.push(`<div>Days from harvest = ${fmt0(harvS)} ÷ ${fmt0(dShow)} = <strong>${fmt1(daysFromHarv)}</strong> days</div>`);
        }
        if (Number.isFinite(daysFromTank)){
          const tShow = sys==="imp" ? tankG : tankG*L_PER_GAL;
          const dShow = sys==="imp" ? dGPD : dGPD*L_PER_GAL;
          lines.push(`<div>Days from existing tank = ${fmt0(tShow)} ÷ ${fmt0(dShow)} = <strong>${fmt1(daysFromTank)}</strong> days</div>`);
        }
        $("#steps").innerHTML = `<div style="display:grid;gap:.35rem">${lines.join("")}</div>`;
      }

      function show(){
        $("#harv").textContent = "—";
        $("#tankSuggest").textContent = "—";
        $("#daysFromHarv").textContent = "—";
        $("#daysFromTank").textContent = "—";
      }
    </script>
  </main>
</Layout>
