---
// src/pages/calculators/rainwater-catchment.astro
import Layout from "../../layouts/Layout.astro";
---

<Layout>
  <Fragment slot="head">
    <title>Rainwater Catchment & Tank Sizing Calculator | AgCalculator</title>
    <meta name="description" content="Estimate harvestable rainwater from a roof and size a storage tank for days of supply. Works in US/metric, supports rectangle area, and first-flush losses." />
    <link rel="canonical" href="https://agcalculator.com/calculators/rainwater-catchment/" />

    <!-- Open Graph -->
    <meta property="og:site_name" content="AgCalculator" />
    <meta property="og:title" content="Rainwater Catchment & Tank Sizing Calculator" />
    <meta property="og:description" content="Estimate captured water and suggested tank size from area, rainfall, runoff coefficient, first-flush, and daily demand." />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://agcalculator.com/calculators/rainwater-catchment/" />
    <meta property="og:image" content="https://agcalculator.com/og-hay-bale.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />

    <!-- Structured data -->
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"WebApplication",
      "name":"Rainwater Catchment & Tank Sizing Calculator",
      "applicationCategory":"Calculator",
      "operatingSystem":"Web",
      "url":"https://agcalculator.com/calculators/rainwater-catchment/",
      "description":"Estimate harvestable rainwater from a roof and size a storage tank for days of supply.",
      "publisher":{"@type":"Organization","name":"AgCalculator","url":"https://agcalculator.com"},
      "offers":{"@type":"Offer","price":"0","priceCurrency":"USD"}
    }
    </script>
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"BreadcrumbList",
      "itemListElement":[
        {"@type":"ListItem","position":1,"name":"Home","item":"https://agcalculator.com/"},
        {"@type":"ListItem","position":2,"name":"Rainwater Catchment & Tank Sizing","item":"https://agcalculator.com/calculators/rainwater-catchment/"}
      ]
    }
    </script>
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"FAQPage",
      "mainEntity":[
        {"@type":"Question","name":"What runoff coefficient should I use?","acceptedAnswer":{"@type":"Answer","text":"Metal or sealed roofs often use 0.9; asphalt shingle around 0.8; concrete ~0.85–0.9; gravel/dirt 0.5–0.7. Start conservative; first-flush diverters and debris reduce yield."}},
        {"@type":"Question","name":"Is rainfall 'per storm' or 'per month'?","acceptedAnswer":{"@type":"Answer","text":"Enter rain depth for the period you care about (single event, month, or year). The calculator converts depth over the roof area to volume, applies the runoff coefficient, then subtracts an optional first-flush."}},
        {"@type":"Question","name":"How big should my tank be?","acceptedAnswer":{"@type":"Answer","text":"Rule of thumb: tank size = daily demand × desired days of supply. Compare with typical harvest from a design storm or season so you don’t oversize storage."}}
      ]
    }
    </script>

    <!-- AdSense (publisher ID) -->
    <meta name="google-adsense-account" content="ca-pub-4050846968323757" />
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4050846968323757" crossorigin="anonymous"></script>

    <style>
      :root{--green:#2F855A;--slate:#334155;--muted:#64748b;--bg:#F8FAFC}
      *{box-sizing:border-box}
      body{background:var(--bg);color:var(--slate)}
      header{padding:1rem;border-bottom:1px solid #e5e7eb;background:#fff}
      .wrap{max-width:960px;margin:0 auto;padding:1rem}
      a{color:var(--green);text-decoration:none}
      fieldset{background:#fff;border:1px solid #e5e7eb;border-radius:12px;margin:0 0 1rem;padding:1rem}
      legend{padding:0 .4rem;color:var(--muted)}
      label{display:block;margin:.4rem 0 .2rem;font-size:.92rem}
      input,select{width:100%;padding:.6rem;border:1px solid #cbd5e1;border-radius:10px}
      .row{display:grid;gap:.8rem}
      @media(min-width:800px){.row{grid-template-columns:repeat(3,1fr)}}
      .result{background:#fff;border:1px solid #e5e7eb;border-radius:12px;padding:1rem}
      .note{color:var(--muted);font-size:.9rem}
      .content{background:#fff;border:1px solid #e5e7eb;border-radius:12px;padding:1rem;margin-top:1rem}
      .content h2{margin:.2rem 0 .6rem}
      .content h3{margin:.8rem 0 .3rem}
      .content ul,.content ol{margin:.2rem 0 .2rem 1rem}
      .content .disclaimer{color:#64748b;margin-top:.6rem}

      /* Units pill toggle (consistent with other pages) */
      .unitsbar{display:flex;align-items:center;gap:.6rem;margin:.5rem 0 .25rem}
      .unitsbar .label{font-weight:600}
      .pills{display:inline-flex;gap:.4rem;background:#f1f5f9;border-radius:999px;padding:.2rem}
      .pill{border:0;background:transparent;padding:.35rem .7rem;border-radius:999px;cursor:pointer}
      .pill.active{background:#fff;border:1px solid #cbd5e1}
      .savehint{margin-left:.4rem}
    </style>
  </Fragment>

  <header><div class="wrap"><a href="/">← AgCalculator</a></div></header>

  <main class="wrap">
    <h1 style="margin:.5rem 0 .5rem">Rainwater Catchment &amp; Tank Sizing</h1>

    <div class="unitsbar">
      <span class="label">Units:</span>
      <div class="pills">
        <button id="uUS" class="pill active" type="button">US</button>
        <button id="uMET" class="pill" type="button">Metric</button>
      </div>
      <span class="note savehint">Saved on this device</span>
    </div>

    <fieldset>
      <legend>Area</legend>
      <div class="row">
        <div>
          <label for="areaMode">Area input</label>
          <select id="areaMode">
            <option value="total">Total roof area</option>
            <option value="rect">Rectangle (L × W)</option>
          </select>
        </div>
        <div id="rowAreaTotal">
          <label id="labelArea" for="area">Roof area (ft²)</label>
          <input id="area" type="number" step="0.01" placeholder="e.g. 1800" />
        </div>
        <div></div>
      </div>
      <div class="row" id="rowAreaRect" style="display:none">
        <div>
          <label id="labelLen" for="len">Roof length (ft)</label>
          <input id="len" type="number" step="0.01" placeholder="e.g. 60" />
        </div>
        <div>
          <label id="labelWid" for="wid">Roof width (ft)</label>
          <input id="wid" type="number" step="0.01" placeholder="e.g. 30" />
        </div>
        <div class="note" style="display:flex;align-items:center">Area = L × W</div>
      </div>
    </fieldset>

    <fieldset>
      <legend>Rainfall, runoff &amp; demand</legend>
      <div class="row">
        <div>
          <label id="labelRain" for="rain">Rainfall for period (in)</label>
          <input id="rain" type="number" step="0.01" placeholder="e.g. 1.2" />
        </div>
        <div>
          <label for="coeff">Runoff coefficient</label>
          <select id="coeff">
            <option value="0.90">Metal / sealed (0.90)</option>
            <option value="0.85">Concrete (0.85)</option>
            <option value="0.80">Asphalt shingle (0.80)</option>
            <option value="0.70">Gravel/dirt (0.70)</option>
          </select>
        </div>
        <div>
          <label id="labelFlush" for="flush">First-flush loss (optional, gal)</label>
          <input id="flush" type="number" step="0.01" placeholder="e.g. 20" />
          <div class="note" id="noteFlush">Subtracts once from harvest (gal)</div>
        </div>
      </div>

      <div class="row">
        <div>
          <label id="labelDemand" for="demand">Daily demand (gal/day)</label>
          <input id="demand" type="number" step="0.01" placeholder="e.g. 200" />
        </div>
        <div>
          <label for="days">Desired days of supply</label>
          <input id="days" type="number" step="1" placeholder="e.g. 7" />
        </div>
        <div>
          <label id="labelTank" for="tank">Existing tank (gal, optional)</label>
          <input id="tank" type="number" step="1" placeholder="e.g. 2500" />
        </div>
      </div>
      <p class="note">Enter rainfall for the time window you care about (storm, month, or season). We’ll compute harvest for that period.</p>
    </fieldset>

    <section class="result">
      <div class="note">Results</div>
      <div style="display:grid;gap:.5rem;margin-top:.4rem">
        <div><strong id="lblHarv">Harvestable water (this period):</strong> <span id="harv">—</span></div>
        <div><strong id="lblTank">Suggested tank size:</strong> <span id="tankSuggest">—</span></div>
        <div><strong>Days of supply from harvest:</strong> <span id="daysFromHarv">—</span></div>
        <div><strong>Days of supply from existing tank:</strong> <span id="daysFromTank">—</span></div>
      </div>
      <p class="note" style="margin-top:.6rem">Estimates only. First-flush, debris, and losses reduce real capture—use conservative numbers.</p>
    </section>

    <section class="content" id="explain">
      <h2>How we got these numbers</h2>
      <div id="steps" class="note">Enter roof, rainfall, and demand to see the step-by-step.</div>

      <h3>Formulas</h3>
      <ul>
        <li><strong>Gross volume (US)</strong> = area(ft²) × rain(in) × 0.623</li>
        <li><strong>Gross volume (metric)</strong> = area(m²) × rain(mm) <em>(liters)</em></li>
        <li><strong>Harvestable</strong> = gross × coefficient − first-flush (≥ 0)</li>
        <li><strong>Suggested tank</strong> = daily demand × desired days</li>
        <li><strong>Days from harvest</strong> = harvestable ÷ daily demand</li>
        <li><strong>Days from existing tank</strong> = tank ÷ daily demand</li>
      </ul>

      <h3>Notes</h3>
      <ul>
        <li>Metric shortcut: liters = area(m²) × rain(mm).</li>
        <li>Consider water-quality risks (paint, birds) for livestock/household uses.</li>
      </ul>

      <p class="disclaimer">Estimates only. Verify with local code and water-quality guidance for potable uses.</p>
    </section>

    <script is:inline>
      // ---------- Helpers ----------
      const $ = (id) => document.getElementById(id);
      const num = (id) => parseFloat(($(id)?.value ?? "").trim());
      const fmt0 = (n) => Number.isFinite(n) ? n.toLocaleString(undefined,{maximumFractionDigits:0}) : "—";
      const fmt1 = (n) => Number.isFinite(n) ? n.toLocaleString(undefined,{maximumFractionDigits:1}) : "—";

      // Constants
      const FT2_PER_M2 = 10.7639;
      const IN_PER_MM = 1/25.4;
      const GAL_PER_L = 0.264172;
      const L_PER_GAL = 3.78541;
      const GAL_PER_IN_FT2 = 0.623;
      const KEY = "agcalc_units"; // US | MET

      // ---------- Unit toggle (pills) ----------
      function currentUnits(){ return localStorage.getItem(KEY) || "US"; }
      function setUnits(u){ localStorage.setItem(KEY,u); updateUnitUI(); compute(); }
      function updateUnitUI(){
        const u = currentUnits();
        $("uUS").classList.toggle("active", u==="US");
        $("uMET").classList.toggle("active", u==="MET");

        $("labelArea").textContent   = u==="US" ? "Roof area (ft²)" : "Roof area (m²)";
        $("labelLen").textContent    = u==="US" ? "Roof length (ft)" : "Roof length (m)";
        $("labelWid").textContent    = u==="US" ? "Roof width (ft)"  : "Roof width (m)";
        $("labelRain").textContent   = u==="US" ? "Rainfall for period (in)" : "Rainfall for period (mm)";
        $("labelDemand").textContent = u==="US" ? "Daily demand (gal/day)" : "Daily demand (L/day)";
        $("labelTank").textContent   = u==="US" ? "Existing tank (gal, optional)" : "Existing tank (L, optional)";
        $("labelFlush").textContent  = u==="US" ? "First-flush loss (optional, gal)" : "First-flush loss (optional, L)";
        $("noteFlush").textContent   = u==="US" ? "Subtracts once from harvest (gal)" : "Subtracts once from harvest (L)";

        $("lblHarv").textContent = u==="US" ? "Harvestable water (this period):" : "Harvestable water (this period):";
        $("lblTank").textContent = u==="US" ? "Suggested tank size:" : "Suggested tank size:";
      }

      $("uUS").addEventListener("click", () => setUnits("US"));
      $("uMET").addEventListener("click", () => setUnits("MET"));

      // ---------- Area mode ----------
      ["areaMode"].forEach(id => $(id).addEventListener("change", onMode));
      function onMode(){
        const a = $("areaMode").value;
        $("rowAreaTotal").style.display = a==="total" ? "" : "none";
        $("rowAreaRect").style.display  = a==="rect"  ? "" : "none";
        compute();
      }

      // ---------- Value getters in base units (US) ----------
      function areaSqft(){
        const u = currentUnits();
        const mode = $("areaMode").value;
        if (mode==="total"){
          const v = num("area");
          if (!(v>0)) return NaN;
          return u==="US" ? v : v * FT2_PER_M2;
        } else {
          let L = num("len"), W = num("wid");
          if (!(L>0 && W>0)) return NaN;
          if (u==="MET"){ L *= Math.sqrt(FT2_PER_M2); W *= Math.sqrt(FT2_PER_M2); }
          return L * W;
        }
      }
      function rainIn(){ const u = currentUnits(); const r = num("rain"); return (r>=0) ? (u==="US" ? r : r*IN_PER_MM) : NaN; }
      function demandGPD(){ const u=currentUnits(); const d=num("demand"); return (d>0)?(u==="US"?d:d*GAL_PER_L):NaN; }
      function tankGallons(){ const u=currentUnits(); const t=num("tank"); return (t>0)?(u==="US"?t:t*GAL_PER_L):0; }
      function flushGallons(){ const u=currentUnits(); const f=num("flush"); return (f>0)?(u==="US"?f:f*GAL_PER_L):0; }

      // ---------- Wiring ----------
      ["area","len","wid","rain","coeff","flush","demand","days","tank"].forEach(id => $(id).addEventListener("input", compute));

      // ---------- Compute ----------
      function compute(){
        const Aft2 = areaSqft();
        const Rin  = rainIn();
        const k    = parseFloat($("coeff").value);
        const dGPD = demandGPD();
        const days = num("days");
        const tankG = tankGallons();
        const flushG = flushGallons();

        if (!(Aft2>0) || !(Rin>=0) || !(k>0)){
          $("harv").textContent="—"; $("tankSuggest").textContent="—"; $("daysFromHarv").textContent="—"; $("daysFromTank").textContent="—";
          $("steps").innerHTML = `<span class="note">Enter roof, rainfall, and demand to see the step-by-step.</span>`;
          return;
        }

        // Base (US gallons)
        const grossGal = Aft2 * Rin * GAL_PER_IN_FT2;
        const harvGal  = Math.max(0, grossGal * k - flushG);

        const tankSuggestGal = (dGPD>0 && days>0) ? (dGPD * days) : NaN;
        const daysFromHarv   = (dGPD>0) ? (harvGal / dGPD) : NaN;
        const daysFromTank   = (dGPD>0 && tankG>0) ? (tankG / dGPD) : NaN;

        const u = currentUnits();
        if (u==="US"){
          $("harv").textContent        = fmt0(harvGal) + " gal";
          $("tankSuggest").textContent = Number.isFinite(tankSuggestGal) ? fmt0(tankSuggestGal) + " gal" : "—";
        } else {
          $("harv").textContent        = fmt0(harvGal * L_PER_GAL) + " L";
          $("tankSuggest").textContent = Number.isFinite(tankSuggestGal) ? fmt0(tankSuggestGal * L_PER_GAL) + " L" : "—";
        }
        $("daysFromHarv").textContent = Number.isFinite(daysFromHarv) ? fmt1(daysFromHarv) + " days" : "—";
        $("daysFromTank").textContent = Number.isFinite(daysFromTank) ? fmt1(daysFromTank) + " days" : "—";

        // Steps (show in selected units)
        const Ashow = u==="US" ? Aft2 : (Aft2/FT2_PER_M2);
        const Rshow = u==="US" ? Rin : (Rin/IN_PER_MM);
        const grossShow = u==="US" ? grossGal : grossGal*L_PER_GAL;
        const flushShow = u==="US" ? flushG : flushG*L_PER_GAL;
        const unitsV = u==="US" ? "gal" : "L";
        const unitsA = u==="US" ? "ft²" : "m²";
        const unitsR = u==="US" ? "in" : "mm";

        const lines = [];
        if (u==="US"){
          lines.push(`<div>Gross = area × rain × 0.623 = ${fmt0(Ashow)} ${unitsA} × ${fmt1(Rshow)} ${unitsR} × 0.623 = <strong>${fmt0(grossShow)}</strong> ${unitsV}</div>`);
        } else {
          lines.push(`<div>Gross = area × rain (metric) = ${fmt0(Ashow)} ${unitsA} × ${fmt1(Rshow)} ${unitsR} = <strong>${fmt0(grossShow)}</strong> ${unitsV}</div>`);
        }
        lines.push(`<div>Harvestable = gross × coeff − first-flush = ${fmt0(grossShow)} × ${k} − ${fmt0(flushShow)} = <strong>${fmt0(u==="US"?harvGal:harvGal*L_PER_GAL)}</strong> ${unitsV}</div>`);
        if (Number.isFinite(tankSuggestGal)){
          const dShow = u==="US" ? dGPD : dGPD*L_PER_GAL;
          const tsShow = u==="US" ? tankSuggestGal : tankSuggestGal*L_PER_GAL;
          lines.push(`<div>Tank suggestion = daily × days = ${fmt0(dShow)} ${unitsV}/day × ${fmt0(days)} = <strong>${fmt0(tsShow)}</strong> ${unitsV}</div>`);
        }
        if (Number.isFinite(daysFromHarv)){
          const dShow = u==="US" ? dGPD : dGPD*L_PER_GAL;
          const hShow = u==="US" ? harvGal : harvGal*L_PER_GAL;
          lines.push(`<div>Days from harvest = ${fmt0(hShow)} ÷ ${fmt0(dShow)} = <strong>${fmt1(daysFromHarv)}</strong> days</div>`);
        }
        if (Number.isFinite(daysFromTank)){
          const tShow = u==="US" ? tankG : tankG*L_PER_GAL;
          const dShow = u==="US" ? dGPD : dGPD*L_PER_GAL;
          lines.push(`<div>Days from existing tank = ${fmt0(tShow)} ÷ ${fmt0(dShow)} = <strong>${fmt1(daysFromTank)}</strong> days</div>`);
        }
        $("steps").innerHTML = `<div style="display:grid;gap:.35rem">${lines.join("")}</div>`;
      }

      // Init
      updateUnitUI();
      onMode();
      compute();
    </script>
  </main>
</Layout>
