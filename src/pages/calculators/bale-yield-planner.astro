---
import Layout from "../../layouts/Layout.astro";
---
<Layout>
  <Fragment slot="head">
    <title>Bale Count from Field Yield (Round & Square) | AgCalculator</title>
    <meta name="description" content="Estimate total bales and tonnage from acres and field yield. Supports round or square bales, density or known bale weight, and payload-based load counts." />
    <link rel="canonical" href="https://agcalculator.com/calculators/bale-yield-planner/" />

    <!-- Open Graph -->
    <meta property="og:site_name" content="AgCalculator" />
    <meta property="og:title" content="Bale Count from Field Yield" />
    <meta property="og:description" content="Calculate bale count and tonnage from acres and yield. Round or square bales, density or known bale weight." />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://agcalculator.com/calculators/bale-yield-planner/" />
    <meta property="og:image" content="https://agcalculator.com/og-hay-bale.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />

    <!-- Structured data -->
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"WebApplication",
      "name":"Bale Count from Field Yield",
      "applicationCategory":"Calculator",
      "operatingSystem":"Web",
      "url":"https://agcalculator.com/calculators/bale-yield-planner/",
      "description":"Estimate total bales and tonnage from acres and field yield. Supports round or square bales, density or known bale weight, and payload-based load counts.",
      "publisher":{"@type":"Organization","name":"AgCalculator","url":"https://agcalculator.com"},
      "offers":{"@type":"Offer","price":"0","priceCurrency":"USD"}
    }
    </script>
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"BreadcrumbList",
      "itemListElement":[
        {"@type":"ListItem","position":1,"name":"Home","item":"https://agcalculator.com/"},
        {"@type":"ListItem","position":2,"name":"Bale Count from Field Yield","item":"https://agcalculator.com/calculators/bale-yield-planner/"}
      ]
    }
    </script>
    <!-- FAQ schema that matches on-page FAQ -->
    <script type="application/ld+json">
    {
      "@context":"https://schema.org",
      "@type":"FAQPage",
      "mainEntity":[
        {
          "@type":"Question",
          "name":"Should I use density or a known bale weight?",
          "acceptedAnswer":{"@type":"Answer","text":"Use a scale-based bale weight whenever possible. Density × volume is a solid estimate when you don’t have a weight ticket."}
        },
        {
          "@type":"Question",
          "name":"What density should I use?",
          "acceptedAnswer":{"@type":"Answer","text":"Typical dry grass hay is about 10 lb/ft³, alfalfa about 12 lb/ft³, and straw about 8 lb/ft³. Actual values vary with moisture and baler tension."}
        },
        {
          "@type":"Question",
          "name":"How much does moisture change the results?",
          "acceptedAnswer":{"@type":"Answer","text":"Wetter bales weigh more. If moisture varies across the field, use a conservative estimate or weigh a small sample of bales."}
        },
        {
          "@type":"Question",
          "name":"How accurate are the load estimates?",
          "acceptedAnswer":{"@type":"Answer","text":"Load counts assume weight-limited hauling (payload). They don’t consider deck space or legal axle/group limits—confirm before transport."}
        },
        {
          "@type":"Question",
          "name":"Can I use metric units?",
          "acceptedAnswer":{"@type":"Answer","text":"Yes. This page includes a US↔Metric toggle. Internally, math uses US units and values are converted for display."}
        }
      ]
    }
    </script>

    <style>
      :root{--green:#2F855A;--slate:#334155;--muted:#64748b;--bg:#F8FAFC}
      *{box-sizing:border-box}
      header{padding:1rem;border-bottom:1px solid #e5e7eb;background:#fff}
      .wrap{max-width:960px;margin:0 auto;padding:1rem}
      a{color:var(--green);text-decoration:none}
      fieldset{background:#fff;border:1px solid #e5e7eb;border-radius:12px;margin:0 0 1rem;padding:1rem}
      legend{padding:0 .4rem;color:var(--muted)}
      label{display:block;margin:.4rem 0 .2rem;font-size:.92rem}
      input,select{width:100%;padding:.6rem;border:1px solid #cbd5e1;border-radius:10px}
      .row{display:grid;gap:.8rem}
      @media(min-width:800px){.row{grid-template-columns:repeat(3,1fr)}}
      .result{background:#fff;border:1px solid #e5e7eb;border-radius:12px;padding:1rem}
      .note{color:var(--muted);font-size:.9rem}
      .content{background:#fff;border:1px solid #e5e7eb;border-radius:12px;padding:1rem;margin-top:1rem}
      .content h2{margin:.2rem 0 .6rem}
      .content h3{margin:.8rem 0 .3rem}
      .content ul,.content ol{margin:.2rem 0 .2rem 1rem}
      .content .disclaimer{color:#64748b;margin-top:.6rem}
      /* units toggle */
      .unit-toggle{display:flex;align-items:center;gap:.4rem;margin:0 0 1rem;padding:.5rem 1rem;background:#fff;border:1px solid #e2e8f0;border-radius:12px}
      .u-btn{padding:.35rem .7rem;border:1px solid #cbd5e1;border-radius:999px;background:#fff;cursor:pointer}
      .u-btn.active{background:var(--green);border-color:var(--green);color:#fff}
    </style>
  </Fragment>

  <header><div class="wrap"><a href="/">← AgCalculator</a></div></header>

  <main class="wrap">
    <h1 style="margin:.5rem 0 1rem">Bale Count from Field Yield</h1>

    <!-- Units toggle (page-local) -->
    <div class="unit-toggle" role="group" aria-label="Units">
      <strong style="margin-right:.25rem">Units:</strong>
      <button type="button" class="u-btn active" data-units="us" aria-pressed="true">US</button>
      <button type="button" class="u-btn" data-units="metric" aria-pressed="false">Metric</button>
      <small class="note" style="margin-left:.5rem">Saved on this device</small>
    </div>

    <fieldset>
      <legend>Field & yield</legend>
      <div class="row">
        <div>
          <label data-unit-label="Acres|Hectares" for="acres">Acres</label>
          <input id="acres" type="number" step="0.01" placeholder="e.g. 42"
                 data-unit="ac>ha" data-unit-ph="e.g. 42|e.g. 17" />
        </div>
        <div>
          <label for="yMode">Yield input</label>
          <select id="yMode">
            <option value="tons">Tons per acre</option>
            <option value="bales">Bales per acre</option>
          </select>
        </div>
        <div id="tonsCol">
          <label data-unit-label="Yield (tons/acre)|Yield (t/ha)" for="tonsA">Yield (tons/acre)</label>
          <input id="tonsA" type="number" step="0.01" placeholder="e.g. 2.4"
                 data-unit="tonac>t/ha" data-unit-ph="e.g. 2.4|e.g. 5.4" />
        </div>
        <div id="balesCol" style="display:none">
          <label data-unit-label="Yield (bales/acre)|Yield (bales/ha)" for="balesA">Yield (bales/acre)</label>
          <input id="balesA" type="number" step="0.01" placeholder="e.g. 4.2"
                 data-unit="baleac>b/ha" data-unit-ph="e.g. 4.2|e.g. 10.4" />
        </div>
        <div>
          <label data-unit-label="Truck/trailer payload (lb, optional)|Truck/trailer payload (kg, optional)" for="payload">Truck/trailer payload (lb, optional)</label>
          <input id="payload" type="number" step="1" placeholder="e.g. 10000"
                 data-unit="lb>kg" data-unit-ph="e.g. 10000|e.g. 4536" />
        </div>
      </div>
    </fieldset>

    <fieldset>
      <legend>Bale details</legend>
      <div class="row">
        <div>
          <label for="bType">Bale type</label>
          <select id="bType">
            <option value="round">Round</option>
            <option value="square">Square/rectangular</option>
          </select>
        </div>
        <div>
          <label data-unit-label="Known bale weight (lb, optional)|Known bale weight (kg, optional)" for="baleWt">Known bale weight (lb, optional)</label>
          <input id="baleWt" type="number" step="1" placeholder="e.g. 850"
                 data-unit="lb>kg" data-unit-ph="e.g. 850|e.g. 386" />
        </div>
        <div>
          <label data-unit-label="Density (lb/ft³)|Density (kg/m³)" for="density">Density (lb/ft³)</label>
          <input id="density" type="number" step="0.1" value="10" data-unit="lbft3>kgm3" />
        </div>
      </div>

      <div class="row" id="roundRow">
        <div>
          <label data-unit-label="Round bale diameter (in)|Round bale diameter (cm)" for="dia">Round bale diameter (in)</label>
          <input id="dia" type="number" step="0.1" value="60" data-unit="in>cm" />
        </div>
        <div>
          <label data-unit-label="Round bale width (in)|Round bale width (cm)" for="width">Round bale width (in)</label>
          <input id="width" type="number" step="0.1" value="60" data-unit="in>cm" />
        </div>
        <div>
          <label>&nbsp;</label>
          <div class="note">Volume = π·(D/2)²·W</div>
        </div>
      </div>

      <div class="row" id="squareRow" style="display:none">
        <div>
          <label data-unit-label="Square length (in)|Square length (cm)" for="sL">Square length (in)</label>
          <input id="sL" type="number" step="0.1" value="36" data-unit="in>cm" />
        </div>
        <div>
          <label data-unit-label="Square width (in)|Square width (cm)" for="sW">Square width (in)</label>
          <input id="sW" type="number" step="0.1" value="18" data-unit="in>cm" />
        </div>
        <div>
          <label data-unit-label="Square height (in)|Square height (cm)" for="sH">Square height (in)</label>
          <input id="sH" type="number" step="0.1" value="14" data-unit="in>cm" />
        </div>
      </div>
      <p class="note">If you enter a known bale weight, density and size are ignored for weight calculation.</p>
    </fieldset>

    <section class="result">
      <div class="note">Results</div>
      <div style="display:grid;gap:.5rem;margin-top:.4rem">
        <div><strong>Estimated bale weight:</strong> <span id="wt">—</span> <span data-unit-text="lb|kg"></span> (<span id="tonsPerBale">—</span> <span data-unit-text="tons|t"></span>)</div>
        <div><strong>Total bales:</strong> <span id="totalBales">—</span></div>
        <div><strong>Total tonnage:</strong> <span id="totalTons">—</span> <span data-unit-text="tons|t"></span></div>
        <div><strong>Loads by payload (est):</strong> <span id="loads">—</span></div>
      </div>
      <p class="note" style="margin-top:.6rem">Bales-by-weight only (space/axle limits not considered).</p>
    </section>

    <section class="content" id="explain">
      <h2>How we got these numbers</h2>
      <div id="steps" class="note">Enter field yield and bale details to see the step-by-step.</div>

      <h3>Formulas</h3>
      <ul>
        <li><strong>Round bale volume (ft³)</strong> = π × (D/2)² × W (inches → feet)</li>
        <li><strong>Square bale volume (ft³)</strong> = L × W × H (inches → feet)</li>
        <li><strong>Bale weight (lb)</strong> = volume × density (if no known weight)</li>
        <li><strong>Total bales</strong> = 
          <ul>
            <li>acres × bales/acre (if yield is bales/acre)</li>
            <li>(acres × tons/acre × 2000) ÷ bale weight (if yield is tons/acre)</li>
          </ul>
        </li>
        <li><strong>Total tons</strong> =
          <ul>
            <li>acres × tons/acre (if yield is tons/acre)</li>
            <li>(total bales × bale weight) ÷ 2000 (if yield is bales/acre)</li>
          </ul>
        </li>
        <li><strong>Loads</strong> (if payload given) = ceil( total weight ÷ payload )</li>
      </ul>

      <h3>Worked example (bales/acre option)</h3>
      <p><em>Scenario:</em> 35 acres at 3.5 bales/acre; known bale weight 900 lb; payload 14,000 lb.</p>
      <ol>
        <li>Total bales = 35 × 3.5 = <strong>123 bales</strong>.</li>
        <li>Total weight = 123 × 900 = <strong>110,700 lb</strong>.</li>
        <li>Total tons = 110,700 ÷ 2,000 = <strong>55.4 tons</strong>.</li>
        <li>Loads ≈ 110,700 ÷ 14,000 = 7.91 → <strong>8 loads</strong> (rounded up).</li>
      </ol>

      <h3>Assumptions & notes</h3>
      <ul>
        <li><strong>Geometry:</strong> Round bales treated as cylinders; square/rectangular bales use finished, tied dimensions.</li>
        <li><strong>Density:</strong> Dry grass hay ≈ 10 lb/ft³; alfalfa ≈ 12 lb/ft³; straw ≈ 8 lb/ft³ (moisture and baler tension vary).</li>
        <li><strong>Known weight overrides density/size:</strong> Use average scale weight when available.</li>
        <li><strong>Short tons:</strong> 1 ton = 2,000 lb.</li>
        <li><strong>Transport:</strong> Payload-only loads; verify deck space and legal axle/group limits.</li>
        <li><strong>Field variation:</strong> Yield is rarely uniform—use conservative inputs when planning hauling.</li>
      </ul>

      <p class="disclaimer">Prepared by AgCalculator · Last updated October 27, 2025</p>
    </section>

    <section class="content" id="faq">
      <h3>FAQ</h3>

      <h4>Should I use density or a known bale weight?</h4>
      <p>Use a scale-based bale weight whenever possible. Density × volume is a solid estimate when you don’t have a weight ticket.</p>

      <h4>What density should I use?</h4>
      <p>Typical dry grass hay ~10 lb/ft³, alfalfa ~12 lb/ft³, straw ~8 lb/ft³. Moisture and baler tension change density.</p>

      <h4>How much does moisture change the results?</h4>
      <p>Wetter bales weigh more; if moisture varies, use a conservative estimate or weigh a small sample.</p>

      <h4>How accurate are the load estimates?</h4>
      <p>Loads here are weight-based only. Real loads may be limited by deck space, stacking pattern, tie-downs, and legal axle/group limits.</p>

      <h4>Can I use metric units?</h4>
      <p>Yes—toggle at the top of the page. The math runs in US units and values are converted for display.</p>
    </section>

    <section class="content" id="related">
      <h3>Also try…</h3>
      <ul>
        <li><a href="/calculators/hay-bale-planner/">Hay Bale Weight &amp; Load Planner</a> — plan truck/trailer loads by bale size and density.</li>
        <li><a href="/calculators/field-capacity/">Field Capacity &amp; Spray Rate</a> — estimate acres/hour to plan time and fuel around baling operations.</li>
      </ul>
    </section>

    <!-- ===== Units helper + calculator logic (page-local) ===== -->
    <script is:inline>
      (function () {
        const KEY = 'agc_units';
        const $$ = (s) => document.querySelectorAll(s);

        const conv = {
          'ft>m': x => x * 0.3048,               'm>ft': x => x / 0.3048,
          'in>cm': x => x * 2.54,                'cm>in': x => x / 2.54,
          'ft3>m3': x => x * 0.028316846592,     'm3>ft3': x => x / 0.028316846592,
          'ac>ha': x => x * 0.4046856422,        'ha>ac': x => x / 0.4046856422,
          'lb>kg': x => x * 0.45359237,          'kg>lb': x => x / 0.45359237,
          'ton>t': x => x * 0.90718474,          't>ton': x => x / 0.90718474, // short ton ↔ tonne
          'lbft3>kgm3': x => x * 16.018463,      'kgm3>lbft3': x => x / 16.018463,
          // rate conversions
          'tonac>t/ha': x => x * (0.90718474/0.4046856422),  't/ha>tonac': x => x * (0.4046856422/0.90718474),
          'baleac>b/ha': x => x * 2.4710538147,              'b/ha>baleac': x => x / 2.4710538147
        };

        window.AGCUnits = {
          mode: () => localStorage.getItem(KEY) || 'us',
          setMode(m){ localStorage.setItem(KEY, m); paint(m); },
          // Read a field normalized to US units for math
          get(el){
            const raw = parseFloat(el.value);
            if (!isFinite(raw)) return NaN;
            const map = (el.dataset.unit || '').trim();
            if (!map) return raw;
            const [us, metric] = map.split('>');
            if (this.mode() === 'us') return raw;
            const fn = conv[`${metric}>${us}`];
            return fn ? fn(raw) : raw;
          },
          // Convert a US-number to display units for output
          out(usNumber, map){
            if (!isFinite(usNumber)) return NaN;
            if (this.mode() === 'us' || !map) return usNumber;
            const fn = conv[map]; // map is us>metric
            return fn ? fn(usNumber) : usNumber;
          }
        };

        function paint(mode){
          document.querySelectorAll('.unit-toggle .u-btn').forEach(btn => {
            const on = btn.dataset.units === mode;
            btn.classList.toggle('active', on);
            btn.setAttribute('aria-pressed', String(on));
          });

          // Swap UI labels/placeholders/unit text
          $$('[data-unit-label]').forEach(el => {
            const [us, met] = el.dataset.unitLabel.split('|');
            el.textContent = (mode === 'metric' ? met : us);
          });
          $$('input[data-unit-ph]').forEach(el => {
            const [us, met] = el.dataset.unitPh.split('|');
            el.placeholder = (mode === 'metric' ? met : us);
          });
          $$('[data-unit-text]').forEach(el => {
            const [us, met] = el.dataset.unitText.split('|');
            el.textContent = (mode === 'metric' ? met : us);
          });

          // Trigger recalculation
          document.querySelectorAll('input,select').forEach(el => {
            el.dispatchEvent(new Event('input', {bubbles:true}));
            el.dispatchEvent(new Event('change', {bubbles:true}));
          });
        }

        document.addEventListener('click', (e) => {
          const btn = e.target.closest('.u-btn');
          if (!btn) return;
          window.AGCUnits.setMode(btn.dataset.units);
        });

        // Initialize
        paint(window.AGCUnits.mode());
      })();
    </script>

    <script is:inline>
      // Helpers (inline)
      const $ = (id) => document.getElementById(id);
      const fmt0 = (n) => Number.isFinite(n) ? n.toLocaleString(undefined,{maximumFractionDigits:0}) : "—";
      const fmt1 = (n) => Number.isFinite(n) ? n.toLocaleString(undefined,{maximumFractionDigits:1}) : "—";
      const ceil = (n) => Math.ceil(n);

      $("yMode").addEventListener("change", () => {
        const m = $("yMode").value;
        $("tonsCol").style.display  = m==="tons"  ? "" : "none";
        $("balesCol").style.display = m==="bales" ? "" : "none";
        compute();
      });
      $("bType").addEventListener("change", () => {
        const r = $("bType").value === "round";
        $("roundRow").style.display  = r ? "" : "none";
        $("squareRow").style.display = r ? "none" : "";
        compute();
      });

      const fields = ["acres","yMode","tonsA","balesA","payload","bType","baleWt","density","dia","width","sL","sW","sH"];
      fields.forEach(id => $(id).addEventListener("input", compute));

      function baleVolumeFt3(){
        const known = AGCUnits.get($("baleWt")); // normalized to lb
        if (Number.isFinite(known) && known>0) return { wt: known, vol: NaN, usedKnown: true };

        const dens = AGCUnits.get($("density")); // lb/ft³
        if (!(dens>0)) return { wt: NaN, vol: NaN, usedKnown: false };

        if ($("bType").value === "round"){
          const Dft = AGCUnits.get($("dia"))/12;   // inches→feet already normalized
          const Wft = AGCUnits.get($("width"))/12;
          if (Dft>0 && Wft>0){
            const vol = Math.PI * Math.pow(Dft/2,2) * Wft; // ft³
            return { wt: vol * dens, vol, usedKnown: false };
          }
        } else {
          const Lft = AGCUnits.get($("sL"))/12, Wft = AGCUnits.get($("sW"))/12, Hft = AGCUnits.get($("sH"))/12;
          if (Lft>0 && Wft>0 && Hft>0){
            const vol = Lft*Wft*Hft; // ft³
            return { wt: vol * dens, vol, usedKnown: false };
          }
        }
        return { wt: NaN, vol: NaN, usedKnown: false };
      }

      function compute(){
        const acres   = AGCUnits.get($("acres"));  // ac
        const mode    = $("yMode").value;
        const tonsA   = AGCUnits.get($("tonsA"));  // ton/ac (normalized)
        const balesA  = AGCUnits.get($("balesA")); // bales/ac (normalized)
        const payload = AGCUnits.get($("payload")); // lb

        const { wt: baleWtUS, vol, usedKnown } = baleVolumeFt3();

        let totalBales = NaN, totalTonsUS = NaN, loads = NaN, lines = [];
        let tonsPerBaleUS = Number.isFinite(baleWtUS) ? (baleWtUS / 2000) : NaN;

        if (!(acres>0)){
          show(); $("steps").innerHTML = `<span class="note">Enter acres, yield, and bale details to see the step-by-step.</span>`; return;
        }

        if (mode === "tons"){
          if (!(tonsA>0)){
            show(); $("steps").innerHTML = `<span class="note">Enter a tons/acre value.</span>`; return;
          }
          totalTonsUS = acres * tonsA; // short tons
          if (Number.isFinite(baleWtUS) && baleWtUS>0){
            totalBales = (totalTonsUS * 2000) / baleWtUS;
          }
          lines.push(`<div>Total tons = ${fmt1(acres)} × ${fmt1(tonsA)} = <strong>${fmt1(totalTonsUS)}</strong> tons</div>`);
          if (Number.isFinite(baleWtUS)){
            lines.push(`<div>Est. bale wt = ${fmt0(baleWtUS)} lb${usedKnown ? " (known)" : ""}${Number.isFinite(vol) ? ` (from ${fmt1(vol)} ft³ × ${fmt1(AGCUnits.get($("density")))} lb/ft³)` : ""}</div>`);
            lines.push(`<div>Total bales = (${fmt1(totalTonsUS)} × 2000) ÷ ${fmt0(baleWtUS)} = <strong>${fmt0(totalBales)}</strong></div>`);
          }
        } else { // bales per acre
          if (!(balesA>0)){
            show(); $("steps").innerHTML = `<span class="note">Enter a bales/acre value.</span>`; return;
          }
          totalBales = acres * balesA;
          if (Number.isFinite(baleWtUS) && baleWtUS>0){
            totalTonsUS = (totalBales * baleWtUS) / 2000;
          }
          lines.push(`<div>Total bales = ${fmt1(acres)} × ${fmt1(balesA)} = <strong>${fmt0(totalBales)}</strong></div>`);
          if (Number.isFinite(baleWtUS)){
            lines.push(`<div>Est. bale wt = ${fmt0(baleWtUS)} lb${usedKnown ? " (known)" : ""}${Number.isFinite(vol) ? ` (from ${fmt1(vol)} ft³ × ${fmt1(AGCUnits.get($("density")))} lb/ft³)` : ""}</div>`);
            lines.push(`<div>Total tons = ${fmt0(totalBales)} × ${fmt0(baleWtUS)} ÷ 2000 = <strong>${fmt1(totalTonsUS)}</strong> tons</div>`);
          }
        }

        if (Number.isFinite(totalTonsUS) && payload>0){
          const totalLb = totalTonsUS * 2000;
          loads = ceil(totalLb / payload);
          lines.push(`<div>Loads ≈ (${fmt1(totalTonsUS)} × 2000) ÷ ${fmt0(payload)} = <strong>${fmt0(loads)}</strong> loads</div>`);
        }

        $("steps").innerHTML = lines.length ? `<div style="display:grid;gap:.35rem">${lines.join("")}</div>` : `<span class="note">Enter acres, yield, and bale details to see the step-by-step.</span>`;

        // Display (convert to metric if needed)
        const wtDisplay        = AGCUnits.out(baleWtUS, 'lb>kg');
        const tonsPerBaleDisp  = AGCUnits.out(tonsPerBaleUS, 'ton>t');
        const totalTonsDisplay = AGCUnits.out(totalTonsUS, 'ton>t');

        $("wt").textContent          = AGCUnits.mode()==='metric' ? fmt0(wtDisplay) : fmt0(baleWtUS);
        $("tonsPerBale").textContent = AGCUnits.mode()==='metric' ? fmt1(tonsPerBaleDisp) : fmt1(tonsPerBaleUS);
        $("totalBales").textContent  = fmt0(totalBales);
        $("totalTons").textContent   = AGCUnits.mode()==='metric' ? fmt1(totalTonsDisplay) : fmt1(totalTonsUS);
        $("loads").textContent       = fmt0(loads);
      }

      // init
      compute();
    </script>
  </main>
</Layout>
